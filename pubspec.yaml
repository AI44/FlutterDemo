name: flutterdemo
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.4

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations: # 多语言需要
    sdk: flutter

# ^表示该依赖允许使用 0.17.0 版本以及后续的所有兼容版本，但不包括 1.0.0 或更高版本。
# 主版本（0）: 可能会有破坏性变更。
# 次版本（17）: 增加新特性，但向后兼容。
# 修补版本（0）: 修复 bug，不会破坏向后兼容性。
  intl: ^0.19.0

  get: ^4.6.6


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

  intl_generator: ^0.4.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  assets:
    - graphics/

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  #
  # asset 的声明顺序是无关紧要的，asset的实际目录可以是任意文件夹。
  # 还指定文件夹：
  #   - assets/images/
  #   - assets/files/
  #
  # 如果应用程序目录中有以下文件:
  # …/pubspec.yaml
  # …/graphics/my_icon.png
  # …/graphics/background.png
  # …/graphics/dark/background.png
  # …
  # 然后pubspec.yaml文件中只需包含:
  # flutter:
  #  assets:
  #    - graphics/background.png
  # 那么这两个graphics/background.png和graphics/dark/background.png 都将包含在您的 asset bundle中。
  # 前者被认为是main asset（主资源），后者被认为是一种变体（variant）。

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package

#  依赖本地包
#  如果我们正在本地开发一个包，包名为pkg1，我们可以通过下面方式依赖：
#  dependencies:
#    pkg1:
#      path: ../../code/pkg1
#
#  依赖Git
#  你也可以依赖存储在Git仓库中的包。如果软件包位于仓库的根目录中，请使用以下语法：
#  dependencies:
#    pkg1:
#      git:
#        url: git://github.com/xxx/pkg1.git
#
#  上面假定包位于Git存储库的根目录中。如果不是这种情况，可以使用path参数指定相对位置，例如：
#  dependencies:
#    package1:
#      git:
#        url: git://github.com/flutter/packages.git
#        path: packages/package1
#
#  其他依赖方式：https://www.dartlang.org/tools/pub/dependencies

# assets资源加载逻辑：
# https://book.flutterchina.club/chapter2/flutter_assets_mgr.html#_2-6-3-加载-assets
